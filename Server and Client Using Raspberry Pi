*THIS IS THE CLIENT SIDE CODE*

#include <netinet/in.h>
#include <net/if.h>
#include <netdb.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h> // bzero()
#include <sys/socket.h>
#include <unistd.h> // read(), write(), close()
#define MAX 80
#define PORT 8080
#define SA struct sockaddr
#include <errno.h>
#include <time.h>
void func(int sockfd)
{
    char buff[MAX];
    int x;

    for (;;) {
        bzero(buff, sizeof(buff));
        x = 0;
        //while ((buff[x++] = getchar()) != '\n');
        char IPadd[500];
        int n;
        struct ifreq ifr;
        char array[] = "eth0";

        n = socket(AF_INET, SOCK_DGRAM, 0);
        //Type of address to retrieve - IPv4 IP address
        ifr.ifr_addr.sa_family = AF_INET;
        //Copy the interface name in the ifreq structure
        strncpy(ifr.ifr_name , array , IFNAMSIZ - 1);
        ioctl(n, SIOCGIFADDR, &ifr);
        close(n);
        //display result
        printf("Enter the string: ");
        strncpy(buff, inet_ntoa(( (struct sockaddr_in *)&ifr.ifr_addr )->sin_addr),100) ;
        write(sockfd,buff,sizeof(buff));
        sleep(10);
        printf("IP Address is %s - %s\n" , array , inet_ntoa(( (struct sockaddr_in *)&ifr.ifr_addr )->sin_addr) );

        bzero(buff, sizeof(buff));
        read(sockfd, buff, sizeof(buff));

        printf("From Server : %s", buff);

        if ((strncmp(buff, "exit", 4)) == 0) {
            printf("Client Exit...\n");
            break;
        }

        if (errno == ECONNRESET) {
            printf("Connection with the server lost. Trying to reconnect...\n");
            break;
        }
    }
}


int main()
{
    int sockfd, connfd;
    struct sockaddr_in servaddr, cli;

    // socket create and verification
    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd == -1) {
        printf("socket creation failed...\n");
        exit(0);
    }
    else
        printf("Socket successfully created..\n");
    bzero(&servaddr, sizeof(servaddr));

    // assign IP, PORT
    servaddr.sin_family = AF_INET;
    servaddr.sin_addr.s_addr = inet_addr("192.168.1.220");
    servaddr.sin_port = htons(PORT);
        for(;;)
        {
    // connect the client socket to server socket
    if (connect(sockfd, (SA*)&servaddr, sizeof(servaddr)) != 0) {
        printf("connection with the server failed...\n");
        printf("Trying to reconnect in 5 seconds...\n");
            sleep(5); // wait 5 seconds before retrying
            continue;

    }
    else{
        printf("connected to the server..\n");


    // function for chat
        func(sockfd);
    }
    sleep(10);
      }
      
    close(sockfd);
}
